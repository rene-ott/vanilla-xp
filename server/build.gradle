plugins {
	id 'org.springframework.boot' version '2.4.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id "io.freefair.lombok" version "5.3.0"
	id 'java'
}

group = 'rscvanilla.xp'
version = '0.0.1'
sourceCompatibility = "11"
targetCompatibility = "11"

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web:2.4.2'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.4.2'
	implementation 'org.postgresql:postgresql:42.2.18'
	implementation "org.jsoup:jsoup:1.13.1"
	implementation "commons-validator:commons-validator:1.7"
	implementation "com.google.guava:guava:30.1-jre"
	implementation "org.modelmapper:modelmapper:2.3.9"
	implementation "org.springframework.boot:spring-boot-starter-thymeleaf:2.4.2"

	developmentOnly "org.springframework.boot:spring-boot-devtools:2.4.2"
	testRuntimeOnly "com.h2database:h2:"
	testImplementation 'org.springframework.boot:spring-boot-starter-test:2.4.2'
}

def tasksDir = "${rootDir}/tasks"
def outDir = "${tasksDir}/out"

def buildDir = project.buildDir
def libsDir = "${buildDir}/libs"
def jarArchiveName = "app.jar";

task copyClientDistToResources(type: Copy) {
	dependsOn processResources
	dependsOn ":client:generateClientDist"

	from "${project(':client:').projectDir}/dist"
	into "${buildDir}/resources/main/static"
}

bootJar {
	dependsOn copyClientDistToResources
	archiveFileName = jarArchiveName
}

task rmDir(type: Delete) {
	dependsOn bootJar
	delete outDir
}

task createOutDir {
	dependsOn rmDir
	mkdir outDir
}

task copyReleaseTemplateToDistDir(type: Copy) {
	dependsOn createOutDir
	from "${tasksDir}/release-template" into "${outDir}/dist"
}

task copyAppJarToOutDir(type: Copy) {
	dependsOn copyReleaseTemplateToDistDir
	from "${libsDir}/${jarArchiveName}" into "${outDir}/dist/app"
}

task packageDist(type: Zip) {
	dependsOn copyAppJarToOutDir
	archiveFileName = "dist.zip"
	destinationDirectory = file("$outDir")

	from "$outDir/dist"
}

task releaseDist {
	dependsOn packageDist
}

test {
	useJUnitPlatform()
}

